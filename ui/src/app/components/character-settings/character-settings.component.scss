.char-details {
  font-size: 0.85em;
  color: #a0a0a0;
  margin-left: 4px;
  display: block;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  max-width: 100%;
}

.tab-content {
  padding: 20px;
  background: transparent;
}

.tab-icon {
  margin-right: 8px;
}

.settings-grid {
  display: flex;
  flex-direction: column;
  gap: 0px;
  padding: 20px;
}

:not(.avatar-option) mat-form-field {
  width: 100%;
}

mat-slide-toggle {
  margin: 10px 0;
}

/* Character Management Styles */
.character-management-section {
  margin-bottom: 20px;
  padding: 20px;
  border-radius: 8px;
  background-color: rgba(255, 255, 255, 0.05);
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
}

.character-selector {
  display: flex;
  flex-direction: column;
  gap: 16px;
}

.character-buttons {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  gap: 10px;
  justify-content: space-between;
}

.event-suboption {
  padding-left: 16px;
  margin-top: 8px;
}

.character-buttons button {
  flex: 1;
  min-width: 100px;
}

/* Loading state */
.loading-overlay {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: rgba(0, 0, 0, 0.5);
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 100;
}

.loading-spinner {
  color: white;
}

/* Character prompt textarea */
.character-prompt {
  margin-bottom: 20px;
}

.character-prompt textarea {
  font-family: 'Roboto Mono', monospace;
  line-height: 1.5;
}

.ptt-container {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 1rem;
}

.ptt-container mat-form-field {
  flex: 1;
  margin: 0;
}

.ptt-container mat-slide-toggle {
  flex: 1;
  padding-bottom: 1rem;
}

ul {
  margin-top: 0;
}

.settings-menu {
  min-height: 100%;
  background: transparent;
}

/* Validation message styling */
::ng-deep .validation-error-snackbar {
  --mdc-snackbar-container-color: #f44336 !important;
  color: white;
}

::ng-deep .validation-success-snackbar {
  --mdc-snackbar-container-color: #4caf50 !important;
  color: white;
}

::ng-deep .mat-mdc-tab-body-content {
  background: transparent;
}

::ng-deep .mat-mdc-tab-group {
  background: transparent;
}

::ng-deep .mdc-tab-indicator__content--underline {
  border-color: rgba(255, 255, 255, 0.7) !important;
}

::ng-deep .mat-mdc-tab:not(.mat-mdc-tab-disabled) .mdc-tab-indicator__content--underline {
  border-color: rgba(255, 255, 255, 0.7);
}

::ng-deep .mat-mdc-tab .mdc-tab__text-label {
  color: rgba(255, 255, 255, 0.7);
}

/* Trait containers and selectors styling */
.trait-container {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  gap: 16px;
}

.trait-select,
.trait-input {
  flex: 1;
}

.knowledge-areas {
  margin: 0;
  padding: 0;
}

.knowledge-label {
  display: block;
  font-weight: 500;
}

.knowledge-checkboxes {
  display: flex;
  flex-direction: row;
  gap: 10px;
}

.custom-voice-divider {
  margin: 8px 0;
}

.lowWidth {
  max-width: 60px;
}

.event-search-and-reset {
  display: flex;
  align-items: center;
  gap: 16px;
  margin-bottom: 16px;

  .search-box {
    flex: 1;
    margin-bottom: 0;
  }

  button {
    padding: 25px 10px;
    margin: 0;
  }
}

.character-display {
  span.trait-label {
    font-size: 18px;
    font-weight: 500;
  }
}
.character-content {
    white-space: pre-wrap;
    //font-size: 14px;
    //line-height: 1.5;
    max-height: 330px;
    overflow-y: auto;
    padding: 0 2px;
    margin: 0 0 8px;
  }

.character-display.with-traits {
  display: flex;

  .character-traits{
    width: 25%;
  }
  .character-content{
    width: 75%;
  }
}

.character-traits {
  .trait-item {
    //display: flex;
    flex-direction: column;

    &:last-child {
      margin-bottom: 0;
    }

    .trait-label {
      color: rgba(255, 255, 255, 0.6);
      font-weight: 500;
    }

    .trait-value {
      color: rgba(255, 255, 255, 0.9);

      span {
        display: inline-block;
        margin-right: 2px;

        &.active {
          color: rgba(255, 255, 255, 0.9);
          position: relative;
          
          &::before {
            content: "✅";
            margin-right: 4px;
          }
        }
        &:not(.active) {
          color: rgba(255, 255, 255, 0.6);
        }
        &::before {
          content: "❌";
          margin-right: 4px;
        }
      }
    }
  }
}

/* Hide empty subscript wrapper for mat-select */
.character-selector ::ng-deep .mat-mdc-form-field-subscript-wrapper {
  display: none !important;
}

// Avatar-related styles
.character-avatar-preview {
  width: 80px;
  height: 80px;
  float: left;
  margin-right: 16px;
  margin-bottom: 8px;
  overflow: hidden;
  border-radius: 8px;
  border: 2px solid rgba(255, 255, 255, 0.2);
  
  .avatar-preview-image {
    width: 200%; // Make image larger so we only see 1/4 
    height: 200%; // Make image larger so we only see 1/4
  }
}

.character-display {
  overflow: hidden;
  
  &.with-traits {
    // Add extra space for traits when they're shown
    min-height: 120px;
  }
}

.avatar-edit-section {
  margin-bottom: 20px;
  
  .avatar-container {
    display: inline-flex;
    align-items: flex-start;
    padding: 16px;
    background: rgba(255, 255, 255, 0.05);
    border-radius: 8px;
    border: 1px solid rgba(255, 255, 255, 0.1);
    width: fit-content;
  }
  
  .avatar-display-container {
    display: flex;
    justify-content: center;
    flex-shrink: 0;
    
    .avatar-full-display {
      position: relative;
      width: 200px;
      height: 200px;
      
      .avatar-full-image {
        width: 100%;
        height: 100%;
        object-fit: cover;
        border-radius: 12px;
        border: 3px solid rgba(255, 255, 255, 0.2);
        transition: all 0.2s ease;
        
        &:hover {
          border-color: rgba(255, 255, 255, 0.4);
        }
      }
      
      .avatar-edit-button {
        position: absolute;
        top: 8px;
        right: 8px;
        background: rgba(0, 0, 0, 0.7);
        color: white;
        border: 1px solid rgba(255, 255, 255, 0.3);
        
        &:hover {
          background: rgba(0, 0, 0, 0.9);
          border-color: rgba(255, 255, 255, 0.5);
        }
        
        mat-icon {
          font-size: 18px;
          width: 18px;
          height: 18px;
        }
      }
    }
  }
}

// Avatar options styling
.avatar-options-container {
  display: flex;
  flex-direction: column;
  gap: 16px;
  min-height: 200px;
  justify-content: center;

  .avatar-option {
    display: flex;
    align-items: center;
    
    mat-form-field {
      width: 119px;
    }
    
    mat-slide-toggle {
      margin: 0;
    }
  }
}

.character-edit-header {
  display: flex;
  gap: 1rem;

  .character-edit-header-left-column {
    flex-grow: 1;
    display: flex;
    flex-direction: column;
  }
}

.character-voice-container {
  display: flex;
  gap: 8px;
}

// Mute category button styling
.mute-category-button {
  margin-left: auto;
  opacity: 0.7;
  transition: opacity 0.2s ease;
  
  &:hover {
    opacity: 1;
  }
  
  mat-icon {
    font-size: 18px;
    width: 18px;
    height: 18px;
  }
}

// Character prompt header with action buttons
.character-prompt-header {
  display: flex;
  align-items: center;
  justify-content: space-between;
  gap: 16px;
  margin-bottom: 16px;
  
  h4 {
    margin: 0;
    flex: 0 0 auto;
  }
  
  .character-prompt-actions {
    display: flex;
    gap: 12px;
    flex: 0 0 auto;
    
    button {
      mat-icon {
        margin-right: 8px;
      }
    }
  }
}

// Character inspiration contenteditable styling to mimic Material form field
.character-inspiration-wrapper {
  position: relative;
  width: 100%;
  
  .character-inspiration-label {
    position: absolute;
    top: -10px;
    left: 12px;
    background: #424242;
    padding: 0 4px;
    font-size: 12px;
    color: rgba(255, 255, 255, 0.7);
    z-index: 1;
    pointer-events: none;
  }
  
  .character-inspiration-editable {
    padding: 16px 14px;
    font-family: inherit;
    font-size: 16px;
    line-height: 1.5;
    color: rgba(255, 255, 255, 0.87);
    background: transparent;
    border: 1px solid rgba(255, 255, 255, 0.38);
    border-radius: 4px;
    outline: none;
    white-space: pre-wrap;
    word-wrap: break-word;
    overflow-wrap: break-word;
    cursor: text;
    transition: border-color 0.2s ease;
    margin-bottom: 22px;
    
    &:hover {
      border-color: rgba(255, 255, 255, 0.87);
    }
    
    &:focus {
      border-color: #3f51b5;
      border-width: 2px;
      padding: 15px 13px; // Adjust padding to account for thicker border
    }
    
    &:empty:before {
      content: '';
      color: rgba(255, 255, 255, 0.38);
    }
  }
}

// Event row styling to display toggle and disable button side-by-side
.event-row {
  display: flex;
  align-items: center;
  gap: 8px;
  
  mat-slide-toggle {
    flex: 1;
    margin: 10px 0;
  }
  
  .disable-event-button {
    flex-shrink: 0;
    opacity: 0.5;
    transition: opacity 0.2s ease;
    width: 32px;
    height: 32px;
    display: flex;
    align-items: center;
    justify-content: center;
    padding: 0;
    
    &:hover {
      opacity: 1;
    }
    
    mat-icon {
      font-size: 18px;
      width: 18px;
      height: 18px;
      line-height: 18px;
    }
  }
}